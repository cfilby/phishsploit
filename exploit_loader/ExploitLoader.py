
"""Module containing the ExploitLoader class.
"""

import csv
import os
from DbUtil import DbUtil


class ExploitLoader(object):
    """Object responsible for loading the Exploit Database into the specified
    database.
    """

    def __init__(self, db_util):
        """Create a new exploit loader object
        """
        self.db_util = db_util

    def load_exploits(self, exploit_path, exploit_file_name="files.csv"):
        """Load all of the exploits from an ExploitDB Exported database.
        :param exploit_path: path of the extracted exploit database
        :param exploit_file_name: Name of the exploit lookup file
        """
        highest_exploit = self.db_util.get_last_exploit()
        with open(os.path.join(exploit_path, exploit_file_name), 'r') as file:
            csv_reader = csv.DictReader(file)
            for row in csv_reader:
                file_data = None

                if int(row["id"]) <= highest_exploit:
                    continue

                try:
                    file_data = open(os.path.join(exploit_path, row["file"]),
                                     'rb').read()
                except IOError as err:
                    print("Unable to open file: %s" % (err.strerror,))
                    continue

                self.db_util.insert_exploit(
                    row["id"],
                    row["description"],
                    row["date"],
                    row["author"],
                    row["platform"],
                    row["type"],
                    row["port"],
                )
                self.db_util.insert_exploit_file(
                    row["id"],
                    os.path.basename(row["file"]),
                    file_data
                )

            self.db_util.commit()
            self.db_util.close()
